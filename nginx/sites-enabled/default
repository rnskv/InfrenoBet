server {
  listen 80;
  listen 443 ssl;
  server_name infernobet.ru;

  ssl_certificate /etc/nginx/certs/infernobet.crt;
  ssl_certificate_key /etc/nginx/certs/infernobet.key;

  access_log /var/log/nginx/nodejs_project.log;
  charset utf-8;

  if ($ssl_protocol = "") {rewrite ^ https://$server_name$request_uri? permanent;}

  location / {
    proxy_pass http://client:6003;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location ^~ /.well-known {
      allow all;
      root  /data/letsencrypt/;
  }
}

server {
  listen 6004 ssl;
  server_name infernobet.ru;

  ssl_certificate /etc/nginx/certs/infernobet.crt;
  ssl_certificate_key /etc/nginx/certs/infernobet.key;

  access_log /var/log/nginx/nodejs_project.log;
  charset utf-8;

  location / {
    proxy_pass http://backend:6001;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}

server {
  listen 6005 ssl;
  server_name infernobet.ru;

  ssl_certificate /etc/nginx/certs/infernobet.crt;
  ssl_certificate_key /etc/nginx/certs/infernobet.key;

  access_log /var/log/nginx/nodejs_project.log;
  charset utf-8;

  location / {
    proxy_pass http://realtime:6002;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}